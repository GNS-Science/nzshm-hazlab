[flake8]
max-line-length = 120
max-complexity = 18
docstring-convention = google

exclude = .git,
    __pycache__,
    setup.py,
    build,
    dist,
    docs,
    releases,
    .venv,
    .tox,
    .mypy_cache,
    .pytest_cache,
    .vscode,
    .github,

[mypy]
ignore_missing_imports = True

[tool.black]
line-length = 120
skip-string-normalization = true
target-version = ['py311', 'py312']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 120
skip_gitignore = true
# you can skip files as below
#skip_glob = docs/conf.py


[coverage:run]
# uncomment the following to omit files during running
#omit =
[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    def main

[tox:tox]
isolated_build = true
envlist = py311, py312, format, lint, build

[gh-actions]
python =
    3.12: py312
    3.11: py311, format, lint, build

[testenv]
allowlist_externals = pytest
extras =
    test
passenv = *
setenv =
    PYTHONPATH = {toxinidir}
    PYTHONWARNINGS = ignore
commands =
    pytest --cov=toshi_hazard_store --cov-branch --cov-report=xml --cov-report=term-missing tests toshi_hazard_store

[testenv:format]
allowlist_externals =
    isort
    black
extras =
    test
commands =
    isort toshi_hazard_store tests scripts
    black toshi_hazard_store tests scripts

[testenv:lint]
allowlist_externals =
    flake8
    mypy
extras =
    test
commands =
    flake8 toshi_hazard_store tests
    mypy toshi_hazard_store tests

[testenv:build]
allowlist_externals =
    poetry
    mkdocs
    twine
extras =
    doc
    dev
commands =
    poetry build
    mkdocs build
    twine check dist/*
